package main

import "fmt"

type ImageInfo struct {
    ImageLink string
    ImageThumbnail string
}

type ComponentThumbnail struct {
    Component templ.Component
    Thumbnail string
}

templ comp_base(header templ.Component, content templ.Component, footer templ.Component) {
    <!DOCTYPE html>
	<head>
		<meta name="viewport" content="width=device-width, initial-scale=1.0"> 
        <link rel="stylesheet" href="/css/stylesheet.css" type="text/css">
	</head>
	<body class="font-display flex flex-col justify-between min-h-screen lg:text-base">
        <header class="">
        @header
        </header>
        <div class="pl-5 pr-5 lg:pl-40 lg:pr-40 font-display shadow-2xl grow flex-1">
            @content
        </div>
        <footer class="">
        @footer
        </footer>
	</body>
}

templ comp_header(firstname string, lastname string, portraitlink string) {
    <div class="flex flex-col lg:flex-row bg-blue-500 items-center lg:items-start lg:align-middle lg:justify-between pt-5 pb-5 lg:pl-40 lg:pr-40 pl-5 pr-5">
        <div class="flex flex-col lg:flex-row align-middle items-center">
            <img src={ portraitlink } class="rounded-full h-15 w-15 lg:mr-2 ">
            <h1 class="text-4xl text-white">{ firstname } { lastname }</h1>
        </div>
        <nav class="text-white text-2xl inline-flex align-middle items-center pt-1 pb-1">
            <div class="hidden lg:inline-flex">
                <a href="/" class="m-1 border-transparent border-b-2 box-border hover:underline hover:underline-offset-2 hover:decoration-2">Home</a>
                <div class="header-separator"></div>
                <a href="/projects" class="m-1 border-transparent border-b-2 box-border hover:underline hover:underline-offset-2 hover:decoration-2">Projects</a>
                <div class="header-separator"></div>
                <a href="/careers" class="m-1 border-transparent border-b-2 box-border hover:underline hover:underline-offset-2 hover:decoration-2">Career</a>
                <div class="header-separator"></div>
                <a href="/education" class="m-1 border-transparent border-b-2 box-border hover:underline hover:underline-offset-2 hover:decoration-2">Education</a>
            </div>
            <script>
            </script>
            <noscript>
                <div class="lg:hidden h-auto w-10">
                    <a href={"/menu"} class=""><img src="/icons/hamburgermenuicon.svg" alt="Menu" class="border-transparent border-b-2 box-border hover:underline hover:underline-offset-2 hover:decoration-2"></a>
                </div>
            </noscript>
        </nav>
    </div>
}

templ comp_home(biosnippet templ.Component, projects templ.Component, career templ.Component, education templ.Component) {
    <div>
        <div class="">
        @biosnippet
        </div>
        <div class="">
            <div class="grid grid-cols-1 grid-rows-auto lg:grid-cols-2 lg:grid-rows-[50px_auto_50px_auto_50px_auto_50px] gap-10 justify-between p-5 text-center lg:grid-flow-col">
                <h1 class="text-2xl">Latest Projects</h1>
                <div class="lg:row-span-5">@projects</div>
                <a href="/projects" class="home-btn"><b>See more</b></a>
                <h1 class="text-2xl ">Latest Jobs</h1>
                <div class="">@career</div>
                <a href="/careers" class="home-btn"><b>See more</b></a>
                <div class=""></div>
                <h1 class="text-2xl ">Latest Degrees</h1>
                <div class="">@education</div>
                <a href="/education" class="home-btn"><b>See more</b></a>
            </div>
        </div>
    </div>
}

templ comp_project(name string, CodeRepo string, Website string, CompanyName string, 
                    Team string, Tools []string, Date string, Description string, 
                    images []ImageInfo, videoids []string) {
    <div class="">
        <h1 class="text-3xl text-center p-10"><b>{name}</b></h1>
        <div id="carousel">
        </div>
        // Grid for details and description
        <div class="text-center lg:text-left lg:grid lg:grid-cols-[25%_75%] lg:grid-rows-1">
            <div>
                if Date != "" {
                    <div>{ Date }</div>
                }
                if CodeRepo != "" {
                    <div> Public Code Repository: { CodeRepo }</div>
                }
                if Website != "" {
                    <div> Project Website: { Website }</div>
                }
                if CompanyName != "" {
                    <div> Company: { CompanyName } </div>
                }
                if Team != "" {
                    <div> Team: { Team } </div>
                }
                if len(Tools) > 0 {
                    <div>
                        <p>Tools: 
                        for i := 0; i < len(Tools); i++ {
                           { Tools[i] }
                            if i + 1 < len(Tools) {
                                { ", " }
                            }
                        }
                        </p>
                    </div>
                }
            </div>
            <div>
                <p>
                    { Description }
                </p>
            </div>
        </div>
        if len(images) > 0 {
            <noscript>
                <h2 class="text-center text-2xl p-10">Images:</h2>
                <div class="grid auto-rows-auto grid-cols-5">
                    //WIP Image Gallery for NoScript/Javascript not supported browsers
                    for _, image := range images {
                        <a href={ templ.SafeURL(image.ImageLink) }><img src={ image.ImageThumbnail }></a>
                    }

                </div>
            </noscript>
        }
        if len(images) > 0 || len(videoids) > 0 {
            <script src="/js/carousel.js"></script>
            @comp_carousel("carousel", images, videoids)
        }
    </div>
}

templ comp_career(title string, companyname string, description string, date string) {
    <div class="pt-20 pb-20 text-center">
        <h1 class="text-4xl"> { title } </h1>
        <h2 class="text-2xl"> { companyname } </h2>
        <p> { date } </p>
        <p> { description } </p>
    </div>
}

templ comp_education() {

}

templ comp_biosnippet(description string) {
    <div class="text-center self-center">
        <h1 class="text-4xl pt-10 pb-10">Hello!</h1>

        <p class="pb-10">
            { description }
        </p>
    </div>
}

templ comp_summarysnippet_project(id string, Name string, Description string, ThumbnailLink string, charlimit int, largeimages bool) {
    {{ ShortenedDesc := Description
    if len(Description) > charlimit {
        ShortenedDesc = Description[0:charlimit] + "..."
    } }}
    {{
        // TailwindCSS can only read unbroken strings for utility classes. Having something like h-[%dvh] will
        // cause the Tailwind compiler to skip it. Due to the use cases of this component, it was found to be
        // easier and quicker just to have presets, as these can still be read my Tailwind when this file is being
        // parsed.
        var ImageSize string
        if largeimages {
           ImageSize = "min-h-20 h-2/5 lg:h-50"
        } else {
            ImageSize = "min-h-20 h-2/5 lg:h-35"
        }
    }}
    {{ url := fmt.Sprintf("/projects/%s", id)}}
    //Had to create an extra div for the thumbnail in order to center the images origin. Super annoying but that's the trick.
    <div class="text-left gap-1 flex items-center flex-col lg:flex-row overflow-hidden">
        <div class={ "max-lg:mask-b-from-0% w-full lg:w-2/5 lg:h-1 flex items-center overflow-hidden", ImageSize }>
            if ThumbnailLink != ""{
                <div class=" w-full lg:h-1 ">
                    <img class="max-lg:w-full max-lg:h-full object-cover lg:mask-r-from-0% translate-y-0 lg:-translate-y-1/2" src={ ThumbnailLink }>
                </div>
            }
        </div>
        <div class="h-4/5 lg:w-4/5 -mt-20 lg:mt-0 lg:-ml-20 z-2 lg:h-min text-center lg:text-left">
            <h2 class="text-1.5xl"><b><a href={ templ.URL(url) }>{Name}</a></b></h2>
            <p> {ShortenedDesc}</p>
        </div>
    </div>
}

templ comp_summarysnippet_career(ID string, Title string, Date string, Description string, charlimit int) {
    {{ ShortenedDesc := Description
    if len(Description) > charlimit {
        ShortenedDesc = Description[0:charlimit] + "..."
    } }}
    {{ url := fmt.Sprintf("/career/%s", ID)}}
    <div>
        <div class="flex justify-between">
            <a href={ templ.SafeURL(url)}><h2 class="text-left">{ Title }</h2></a>
            <h2 class="text-right">{ Date }</h2>
        </div>
        <p> { ShortenedDesc }</p>
    </div>
}

templ comp_summarysnippet_education(Title string, Major string, Date string) {
    <div class="flex justify-between">
        <h2 class="text-left">{ Title }</h2>
        <h3 class="text-right">{ Date }</h3>
    </div>
    <h2 class="text-left">{ Major }</h2>
}

templ comp_summaryverticalcontainer(comps []templ.Component) {
   <div>
        for _, comp := range comps {
            <div class="shadow-2xl bg-white hover:bg-blue-400 hover:text-white m-1 p-2 rounded-md">
                @comp
            </div>
        }
   </div> 
}

templ comp_summarypage(pagename string, subtitle string, items []templ.Component, ) {
    <div class="pb-20">
        <h1 class=" text-4xl lg:text-6xl text-center pt-10 pb-5">{ pagename }</h1>
        <h2 class="text-2xl text-center pt-5 pb-10">{ subtitle}</h2>
        @comp_summaryverticalcontainer(items)
    </div>
}

templ comp_summarypage_split(pagename string, subtitle string, splittitle string, topitems []templ.Component, botitems []templ.Component) {
    <div class="pb-20">
        <h1 class="text-4xl lg:text-6xl text-center pt-10 pb-5">{ pagename }</h1>
        <h2 class="text-2xl text-center pt-5 pb-10">{ subtitle}</h2>
        @comp_summaryverticalcontainer(topitems)
        <h2 class="text-4xl text-center pt-10 pb-10">{ splittitle }</h2>
        @comp_summaryverticalcontainer(botitems)
    </div>
}

//All Carousel logic is handled in carousel.js in ./js/carousel.js
templ comp_carousel(htmlID string, images []ImageInfo, videoids []string) {
    <script>
        const car = new Carousel({{htmlID}}, {{templ.JSONString(images)}}, {{videoids}})
    </script>
}

templ comp_footer(resumelink string, email string, linkedinlink string, githublink string) {
    {{ emaillink := fmt.Sprintf("mailto:%s", email)}}
    <div class="bg-blue-500 flex justify-between pl-5 pr-5 lg:pl-40 lg:pr-40 pt-10 pb-10">
        <a href={ templ.SafeURL(resumelink) } class="bg-white text-blue-500 rounded-2xl p-10 text-center align-middle hover:bg-blue-300 hover:text-white" ><b>Download Resume</b> </a>
        <div class="flex flex-col text-white text-right align-center content-center">
            <h2><u><b>Socials:</b></u></h2>
            <div class="flex-row">
            <a href={ templ.SafeURL(emaillink) } class="hover:underline">Email</a>
            </div>
            <div class="flex-row">
            <a href={ templ.SafeURL(linkedinlink) } class="hover:underline"> LinkedIn</a>
            </div>
            <div class="flex-row">
            <a href={ templ.SafeURL(githublink)} class="hover:underline">Github</a>
            </div>
        </div>
    </div>
}

templ comp_categories() {
    <div>
        <a href={ templ.SafeURL("/")}>Home</a>
        <a href={ templ.SafeURL("/projects")}>Projects</a>
        <a href={ templ.SafeURL("/careers")}>Career</a>
        <a href={ templ.SafeURL("/education")}>Education</a>
    </div>
}